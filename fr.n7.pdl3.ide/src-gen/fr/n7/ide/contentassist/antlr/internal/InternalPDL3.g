/*
 * generated by Xtext 2.38.0
 */
grammar InternalPDL3;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package fr.n7.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.n7.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import fr.n7.services.PDL3GrammarAccess;

}
@parser::members {
	private PDL3GrammarAccess grammarAccess;

	public void setGrammarAccess(PDL3GrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProcess
entryRuleProcess
:
{ before(grammarAccess.getProcessRule()); }
	 ruleProcess
{ after(grammarAccess.getProcessRule()); } 
	 EOF 
;

// Rule Process
ruleProcess 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessAccess().getGroup()); }
		(rule__Process__Group__0)
		{ after(grammarAccess.getProcessAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWorkDefinitionRef
entryRuleWorkDefinitionRef
:
{ before(grammarAccess.getWorkDefinitionRefRule()); }
	 ruleWorkDefinitionRef
{ after(grammarAccess.getWorkDefinitionRefRule()); } 
	 EOF 
;

// Rule WorkDefinitionRef
ruleWorkDefinitionRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWorkDefinitionRefAccess().getNameAssignment()); }
		(rule__WorkDefinitionRef__NameAssignment)
		{ after(grammarAccess.getWorkDefinitionRefAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWorkSequenceRef
entryRuleWorkSequenceRef
:
{ before(grammarAccess.getWorkSequenceRefRule()); }
	 ruleWorkSequenceRef
{ after(grammarAccess.getWorkSequenceRefRule()); } 
	 EOF 
;

// Rule WorkSequenceRef
ruleWorkSequenceRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWorkSequenceRefAccess().getGroup()); }
		(rule__WorkSequenceRef__Group__0)
		{ after(grammarAccess.getWorkSequenceRefAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGuidanceRef
entryRuleGuidanceRef
:
{ before(grammarAccess.getGuidanceRefRule()); }
	 ruleGuidanceRef
{ after(grammarAccess.getGuidanceRefRule()); } 
	 EOF 
;

// Rule GuidanceRef
ruleGuidanceRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGuidanceRefAccess().getTextAssignment()); }
		(rule__GuidanceRef__TextAssignment)
		{ after(grammarAccess.getGuidanceRefAccess().getTextAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule WorkSequenceType
ruleWorkSequenceType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWorkSequenceTypeAccess().getAlternatives()); }
		(rule__WorkSequenceType__Alternatives)
		{ after(grammarAccess.getWorkSequenceTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkSequenceType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWorkSequenceTypeAccess().getStart2startEnumLiteralDeclaration_0()); }
		('s2s')
		{ after(grammarAccess.getWorkSequenceTypeAccess().getStart2startEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getWorkSequenceTypeAccess().getFinish2startEnumLiteralDeclaration_1()); }
		('f2s')
		{ after(grammarAccess.getWorkSequenceTypeAccess().getFinish2startEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getWorkSequenceTypeAccess().getStart2finishEnumLiteralDeclaration_2()); }
		('s2f')
		{ after(grammarAccess.getWorkSequenceTypeAccess().getStart2finishEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getWorkSequenceTypeAccess().getFinish2finishEnumLiteralDeclaration_3()); }
		('f2f')
		{ after(grammarAccess.getWorkSequenceTypeAccess().getFinish2finishEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__0__Impl
	rule__Process__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getProcessKeyword_0()); }
	'process'
	{ after(grammarAccess.getProcessAccess().getProcessKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__1__Impl
	rule__Process__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getColonKeyword_1()); }
	':'
	{ after(grammarAccess.getProcessAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__2__Impl
	rule__Process__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getNameAssignment_2()); }
	(rule__Process__NameAssignment_2)
	{ after(grammarAccess.getProcessAccess().getNameAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__3__Impl
	rule__Process__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getGroup_3()); }
	(rule__Process__Group_3__0)?
	{ after(grammarAccess.getProcessAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__4__Impl
	rule__Process__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getGroup_4()); }
	(rule__Process__Group_4__0)?
	{ after(grammarAccess.getProcessAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getGroup_5()); }
	(rule__Process__Group_5__0)?
	{ after(grammarAccess.getProcessAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Process__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group_3__0__Impl
	rule__Process__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getWorkdefinitionsKeyword_3_0()); }
	'workdefinitions'
	{ after(grammarAccess.getProcessAccess().getWorkdefinitionsKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group_3__1__Impl
	rule__Process__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getColonKeyword_3_1()); }
	':'
	{ after(grammarAccess.getProcessAccess().getColonKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group_3__2__Impl
	rule__Process__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getWorkDefinitionsAssignment_3_2()); }
	(rule__Process__WorkDefinitionsAssignment_3_2)
	{ after(grammarAccess.getProcessAccess().getWorkDefinitionsAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group_3__3__Impl
	rule__Process__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getGroup_3_3()); }
	(rule__Process__Group_3_3__0)*
	{ after(grammarAccess.getProcessAccess().getGroup_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getSemicolonKeyword_3_4()); }
	';'
	{ after(grammarAccess.getProcessAccess().getSemicolonKeyword_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Process__Group_3_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group_3_3__0__Impl
	rule__Process__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_3_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getSemicolonKeyword_3_3_0()); }
	';'
	{ after(grammarAccess.getProcessAccess().getSemicolonKeyword_3_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_3_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_3_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getWorkDefinitionsAssignment_3_3_1()); }
	(rule__Process__WorkDefinitionsAssignment_3_3_1)
	{ after(grammarAccess.getProcessAccess().getWorkDefinitionsAssignment_3_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Process__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group_4__0__Impl
	rule__Process__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getWorksequencesKeyword_4_0()); }
	'worksequences'
	{ after(grammarAccess.getProcessAccess().getWorksequencesKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group_4__1__Impl
	rule__Process__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getColonKeyword_4_1()); }
	':'
	{ after(grammarAccess.getProcessAccess().getColonKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group_4__2__Impl
	rule__Process__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getWorkSequencesAssignment_4_2()); }
	(rule__Process__WorkSequencesAssignment_4_2)
	{ after(grammarAccess.getProcessAccess().getWorkSequencesAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group_4__3__Impl
	rule__Process__Group_4__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getGroup_4_3()); }
	(rule__Process__Group_4_3__0)*
	{ after(grammarAccess.getProcessAccess().getGroup_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_4__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group_4__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_4__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getSemicolonKeyword_4_4()); }
	';'
	{ after(grammarAccess.getProcessAccess().getSemicolonKeyword_4_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Process__Group_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group_4_3__0__Impl
	rule__Process__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getSemicolonKeyword_4_3_0()); }
	';'
	{ after(grammarAccess.getProcessAccess().getSemicolonKeyword_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getWorkSequencesAssignment_4_3_1()); }
	(rule__Process__WorkSequencesAssignment_4_3_1)
	{ after(grammarAccess.getProcessAccess().getWorkSequencesAssignment_4_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Process__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group_5__0__Impl
	rule__Process__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getNotesKeyword_5_0()); }
	'notes'
	{ after(grammarAccess.getProcessAccess().getNotesKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group_5__1__Impl
	rule__Process__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getColonKeyword_5_1()); }
	':'
	{ after(grammarAccess.getProcessAccess().getColonKeyword_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group_5__2__Impl
	rule__Process__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getGuidancesAssignment_5_2()); }
	(rule__Process__GuidancesAssignment_5_2)
	{ after(grammarAccess.getProcessAccess().getGuidancesAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group_5__3__Impl
	rule__Process__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getGroup_5_3()); }
	(rule__Process__Group_5_3__0)*
	{ after(grammarAccess.getProcessAccess().getGroup_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_5__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group_5__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_5__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getSemicolonKeyword_5_4()); }
	';'
	{ after(grammarAccess.getProcessAccess().getSemicolonKeyword_5_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Process__Group_5_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group_5_3__0__Impl
	rule__Process__Group_5_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_5_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getSemicolonKeyword_5_3_0()); }
	';'
	{ after(grammarAccess.getProcessAccess().getSemicolonKeyword_5_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_5_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group_5_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group_5_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getGuidancesAssignment_5_3_1()); }
	(rule__Process__GuidancesAssignment_5_3_1)
	{ after(grammarAccess.getProcessAccess().getGuidancesAssignment_5_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WorkSequenceRef__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WorkSequenceRef__Group__0__Impl
	rule__WorkSequenceRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkSequenceRef__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkSequenceRefAccess().getPredecessorAssignment_0()); }
	(rule__WorkSequenceRef__PredecessorAssignment_0)
	{ after(grammarAccess.getWorkSequenceRefAccess().getPredecessorAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkSequenceRef__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WorkSequenceRef__Group__1__Impl
	rule__WorkSequenceRef__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkSequenceRef__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkSequenceRefAccess().getLinkTypeAssignment_1()); }
	(rule__WorkSequenceRef__LinkTypeAssignment_1)
	{ after(grammarAccess.getWorkSequenceRefAccess().getLinkTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkSequenceRef__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WorkSequenceRef__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkSequenceRef__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWorkSequenceRefAccess().getSuccessorAssignment_2()); }
	(rule__WorkSequenceRef__SuccessorAssignment_2)
	{ after(grammarAccess.getWorkSequenceRefAccess().getSuccessorAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Process__NameAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessAccess().getNameIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getProcessAccess().getNameIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__WorkDefinitionsAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessAccess().getWorkDefinitionsWorkDefinitionRefParserRuleCall_3_2_0()); }
		ruleWorkDefinitionRef
		{ after(grammarAccess.getProcessAccess().getWorkDefinitionsWorkDefinitionRefParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__WorkDefinitionsAssignment_3_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessAccess().getWorkDefinitionsWorkDefinitionRefParserRuleCall_3_3_1_0()); }
		ruleWorkDefinitionRef
		{ after(grammarAccess.getProcessAccess().getWorkDefinitionsWorkDefinitionRefParserRuleCall_3_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__WorkSequencesAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessAccess().getWorkSequencesWorkSequenceRefParserRuleCall_4_2_0()); }
		ruleWorkSequenceRef
		{ after(grammarAccess.getProcessAccess().getWorkSequencesWorkSequenceRefParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__WorkSequencesAssignment_4_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessAccess().getWorkSequencesWorkSequenceRefParserRuleCall_4_3_1_0()); }
		ruleWorkSequenceRef
		{ after(grammarAccess.getProcessAccess().getWorkSequencesWorkSequenceRefParserRuleCall_4_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__GuidancesAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessAccess().getGuidancesGuidanceRefParserRuleCall_5_2_0()); }
		ruleGuidanceRef
		{ after(grammarAccess.getProcessAccess().getGuidancesGuidanceRefParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__GuidancesAssignment_5_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessAccess().getGuidancesGuidanceRefParserRuleCall_5_3_1_0()); }
		ruleGuidanceRef
		{ after(grammarAccess.getProcessAccess().getGuidancesGuidanceRefParserRuleCall_5_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkDefinitionRef__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWorkDefinitionRefAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getWorkDefinitionRefAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkSequenceRef__PredecessorAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWorkSequenceRefAccess().getPredecessorWorkDefinitionRefCrossReference_0_0()); }
		(
			{ before(grammarAccess.getWorkSequenceRefAccess().getPredecessorWorkDefinitionRefIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getWorkSequenceRefAccess().getPredecessorWorkDefinitionRefIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getWorkSequenceRefAccess().getPredecessorWorkDefinitionRefCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkSequenceRef__LinkTypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWorkSequenceRefAccess().getLinkTypeWorkSequenceTypeEnumRuleCall_1_0()); }
		ruleWorkSequenceType
		{ after(grammarAccess.getWorkSequenceRefAccess().getLinkTypeWorkSequenceTypeEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WorkSequenceRef__SuccessorAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWorkSequenceRefAccess().getSuccessorWorkDefinitionRefCrossReference_2_0()); }
		(
			{ before(grammarAccess.getWorkSequenceRefAccess().getSuccessorWorkDefinitionRefIDTerminalRuleCall_2_0_1()); }
			RULE_ID
			{ after(grammarAccess.getWorkSequenceRefAccess().getSuccessorWorkDefinitionRefIDTerminalRuleCall_2_0_1()); }
		)
		{ after(grammarAccess.getWorkSequenceRefAccess().getSuccessorWorkDefinitionRefCrossReference_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GuidanceRef__TextAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGuidanceRefAccess().getTextSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getGuidanceRefAccess().getTextSTRINGTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
