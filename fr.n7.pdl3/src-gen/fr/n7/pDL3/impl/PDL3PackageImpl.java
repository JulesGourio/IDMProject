/**
 * generated by Xtext 2.38.0
 */
package fr.n7.pDL3.impl;

import fr.n7.pDL3.GuidanceRef;
import fr.n7.pDL3.PDL3Factory;
import fr.n7.pDL3.PDL3Package;
import fr.n7.pDL3.WorkDefinitionRef;
import fr.n7.pDL3.WorkSequenceRef;
import fr.n7.pDL3.WorkSequenceType;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class PDL3PackageImpl extends EPackageImpl implements PDL3Package
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass processEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass workDefinitionRefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass workSequenceRefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass guidanceRefEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EEnum workSequenceTypeEEnum = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see fr.n7.pDL3.PDL3Package#eNS_URI
   * @see #init()
   * @generated
   */
  private PDL3PackageImpl()
  {
    super(eNS_URI, PDL3Factory.eINSTANCE);
  }
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link PDL3Package#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static PDL3Package init()
  {
    if (isInited) return (PDL3Package)EPackage.Registry.INSTANCE.getEPackage(PDL3Package.eNS_URI);

    // Obtain or create and register package
    Object registeredPDL3Package = EPackage.Registry.INSTANCE.get(eNS_URI);
    PDL3PackageImpl thePDL3Package = registeredPDL3Package instanceof PDL3PackageImpl ? (PDL3PackageImpl)registeredPDL3Package : new PDL3PackageImpl();

    isInited = true;

    // Create package meta-data objects
    thePDL3Package.createPackageContents();

    // Initialize created meta-data
    thePDL3Package.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    thePDL3Package.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(PDL3Package.eNS_URI, thePDL3Package);
    return thePDL3Package;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getProcess()
  {
    return processEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getProcess_Name()
  {
    return (EAttribute)processEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getProcess_WorkDefinitions()
  {
    return (EReference)processEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getProcess_WorkSequences()
  {
    return (EReference)processEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getProcess_Guidances()
  {
    return (EReference)processEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getWorkDefinitionRef()
  {
    return workDefinitionRefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getWorkDefinitionRef_Name()
  {
    return (EAttribute)workDefinitionRefEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getWorkSequenceRef()
  {
    return workSequenceRefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getWorkSequenceRef_Predecessor()
  {
    return (EReference)workSequenceRefEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getWorkSequenceRef_LinkType()
  {
    return (EAttribute)workSequenceRefEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getWorkSequenceRef_Successor()
  {
    return (EReference)workSequenceRefEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getGuidanceRef()
  {
    return guidanceRefEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getGuidanceRef_Text()
  {
    return (EAttribute)guidanceRefEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EEnum getWorkSequenceType()
  {
    return workSequenceTypeEEnum;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public PDL3Factory getPDL3Factory()
  {
    return (PDL3Factory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    processEClass = createEClass(PROCESS);
    createEAttribute(processEClass, PROCESS__NAME);
    createEReference(processEClass, PROCESS__WORK_DEFINITIONS);
    createEReference(processEClass, PROCESS__WORK_SEQUENCES);
    createEReference(processEClass, PROCESS__GUIDANCES);

    workDefinitionRefEClass = createEClass(WORK_DEFINITION_REF);
    createEAttribute(workDefinitionRefEClass, WORK_DEFINITION_REF__NAME);

    workSequenceRefEClass = createEClass(WORK_SEQUENCE_REF);
    createEReference(workSequenceRefEClass, WORK_SEQUENCE_REF__PREDECESSOR);
    createEAttribute(workSequenceRefEClass, WORK_SEQUENCE_REF__LINK_TYPE);
    createEReference(workSequenceRefEClass, WORK_SEQUENCE_REF__SUCCESSOR);

    guidanceRefEClass = createEClass(GUIDANCE_REF);
    createEAttribute(guidanceRefEClass, GUIDANCE_REF__TEXT);

    // Create enums
    workSequenceTypeEEnum = createEEnum(WORK_SEQUENCE_TYPE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes

    // Initialize classes and features; add operations and parameters
    initEClass(processEClass, fr.n7.pDL3.Process.class, "Process", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getProcess_Name(), ecorePackage.getEString(), "name", null, 0, 1, fr.n7.pDL3.Process.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getProcess_WorkDefinitions(), this.getWorkDefinitionRef(), null, "workDefinitions", null, 0, -1, fr.n7.pDL3.Process.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getProcess_WorkSequences(), this.getWorkSequenceRef(), null, "workSequences", null, 0, -1, fr.n7.pDL3.Process.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getProcess_Guidances(), this.getGuidanceRef(), null, "guidances", null, 0, -1, fr.n7.pDL3.Process.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(workDefinitionRefEClass, WorkDefinitionRef.class, "WorkDefinitionRef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getWorkDefinitionRef_Name(), ecorePackage.getEString(), "name", null, 0, 1, WorkDefinitionRef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(workSequenceRefEClass, WorkSequenceRef.class, "WorkSequenceRef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEReference(getWorkSequenceRef_Predecessor(), this.getWorkDefinitionRef(), null, "predecessor", null, 0, 1, WorkSequenceRef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getWorkSequenceRef_LinkType(), this.getWorkSequenceType(), "linkType", null, 0, 1, WorkSequenceRef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getWorkSequenceRef_Successor(), this.getWorkDefinitionRef(), null, "successor", null, 0, 1, WorkSequenceRef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_COMPOSITE, IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(guidanceRefEClass, GuidanceRef.class, "GuidanceRef", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getGuidanceRef_Text(), ecorePackage.getEString(), "text", null, 0, 1, GuidanceRef.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Initialize enums and add enum literals
    initEEnum(workSequenceTypeEEnum, WorkSequenceType.class, "WorkSequenceType");
    addEEnumLiteral(workSequenceTypeEEnum, WorkSequenceType.START2START);
    addEEnumLiteral(workSequenceTypeEEnum, WorkSequenceType.FINISH2START);
    addEEnumLiteral(workSequenceTypeEEnum, WorkSequenceType.START2FINISH);
    addEEnumLiteral(workSequenceTypeEEnum, WorkSequenceType.FINISH2FINISH);

    // Create resource
    createResource(eNS_URI);
  }

} //PDL3PackageImpl
